{"version":3,"file":"index.esm.js","sources":["../src/SuspensePendingContext.tsx","../src/BrowserRouter.tsx","../src/LazyFetcher.ts","../src/RouteDataContext.ts","../src/Route.tsx"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nconst SuspensePendingContext = createContext(false);\n\ntype Props = {\n  suspensePending: boolean;\n};\n\nexport const SuspensePendingProvider: React.FC<Props> = ({\n  suspensePending,\n  children,\n}) => (\n  <SuspensePendingContext.Provider value={suspensePending}>\n    {children}\n  </SuspensePendingContext.Provider>\n);\n\nexport const useSuspensePending = () => useContext(SuspensePendingContext);\n","// eslint-disable-next-line spaced-comment\n/// <reference types=\"react/experimental\" />\n\nimport React, {\n  SuspenseConfig,\n  TransitionStartFunction,\n  useRef,\n  useTransition,\n} from 'react';\nimport { Router } from 'react-router';\nimport { BrowserRouterProps } from 'react-router-dom';\nimport {\n  createBrowserHistory as createBrowserHistoryOrig,\n  BrowserHistoryBuildOptions,\n  History,\n  Location,\n  Action,\n} from 'history';\n\nimport { SuspensePendingProvider } from './SuspensePendingContext';\n\ntype Options = BrowserHistoryBuildOptions & {\n  startTransiton: TransitionStartFunction;\n};\n\nconst createBrowserHistory = (options?: Options) => {\n  const history = createBrowserHistoryOrig(options);\n  const { startTransiton } = options || {};\n  if (startTransiton) {\n    const savedListen = history.listen;\n    history.listen = (listener: History.LocationListener<History.PoorMansUnknown>) => {\n      const unlisten = savedListen((\n        location: Location<History.PoorMansUnknown>,\n        action: Action,\n      ) => {\n        startTransiton(() => {\n          listener(location, action);\n        });\n      });\n      return unlisten;\n    };\n  }\n  return history;\n};\n\ntype Props = BrowserRouterProps & {\n  suspenseConfig?: SuspenseConfig;\n};\n\nexport const BrowserRouter: React.FC<Props> = ({\n  suspenseConfig,\n  children,\n  ...props\n}) => {\n  const [startTransiton, isPending] = useTransition(suspenseConfig);\n  const history = useRef<History>();\n  if (!history.current) {\n    history.current = createBrowserHistory({\n      ...props,\n      startTransiton,\n    });\n  }\n  return (\n    <SuspensePendingProvider suspensePending={isPending}>\n      <Router history={history.current}>\n        {children}\n      </Router>\n    </SuspensePendingProvider>\n  );\n};\n\nexport default BrowserRouter;\n","import { match as Match } from 'react-router';\nimport { prepare, run, prefetch } from 'react-suspense-fetch';\n\nexport const LazyFetcher = <T extends object, P>(\n  factory: () => Promise<{ default: (m: Match<P>) => T }>,\n) => {\n  const preparedFetcher = prepare(factory);\n  const invokeFetcher = async (\n    [fetcher, match]: readonly [(m: Match<P>) => T, Match<P>],\n  ) => fetcher(match);\n  return (match: Match<P>) => {\n    run(preparedFetcher, null);\n    return prefetch(\n      invokeFetcher,\n      [preparedFetcher, match] as const,\n      (source) => [\n        source[0].default, // can suspend\n        source[1],\n      ] as const,\n    );\n  };\n};\n\nexport default LazyFetcher;\n","import { createContainer } from 'react-tracked';\n\nconst passDataProp = ({ data }: { data: object } = { data: {} }) => [\n  // Because Suspendable by react-suspense-fetch is a mutable object,\n  // we need to expand it here. Othrewise, state usage tracking\n  // by react-tracked doesn't work.\n  { ...data },\n  null, // we don't use useUpdate\n] as const;\n\nexport const {\n  Provider: RouteDataProvider,\n  useTrackedState: useRouteData,\n  useSelector: useRouteDataSelector,\n} = createContainer(passDataProp);\n","import React, { useEffect, useState } from 'react';\nimport {\n  RouteProps,\n  match as Match,\n  Route as OrigRoute,\n  matchPath,\n  useHistory,\n} from 'react-router';\nimport {\n  Location,\n  History,\n} from 'history';\n\nimport { RouteDataProvider } from './RouteDataContext';\n\nconst INITIALIZED_MAP = Symbol('INITIALIZED_MAP');\n\n// HACK\nconst getInitializedMap = (history: History) => {\n  const hackedHistory = history as {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [INITIALIZED_MAP]?: Map<any, any>;\n  };\n  let initializedMap = hackedHistory[INITIALIZED_MAP];\n  if (!initializedMap) {\n    initializedMap = new Map();\n    hackedHistory[INITIALIZED_MAP] = initializedMap;\n  }\n  return initializedMap;\n};\n\n// HACK\nconst removeCircular = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const seen: any[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (key: any, val: any) => {\n    if (key === 'children') return null;\n    if (seen.includes(val)) return null;\n    seen.push(val);\n    return val;\n  };\n};\n\ntype Props = RouteProps & {\n  fetchData?: (m: Match) => object;\n};\n\nexport const Route: React.FC<Props> = ({ fetchData, ...props }) => {\n  const history = useHistory();\n  const [routeData, setRouteData] = useState<object>(() => {\n    const match = matchPath(history.location.pathname, props);\n    const initializedMap = getInitializedMap(history);\n    const key = JSON.stringify(props, removeCircular()); // HACK\n    // HACK it there any better way???\n    if (!initializedMap.has(key)) {\n      initializedMap.set(\n        key,\n        match && fetchData ? fetchData(match) : null,\n      );\n      // FIXME no cleanup\n    }\n    return initializedMap.get(key);\n  });\n  useEffect(() => {\n    const unlisten = history.listen((location: Location) => {\n      const match = matchPath(location.pathname, props);\n      if (match && fetchData) {\n        setRouteData(fetchData(match));\n      }\n    });\n    // FIXME route could be change before this effect is handled?\n    return unlisten;\n  }, [props, fetchData, history]);\n  return (\n    <RouteDataProvider data={routeData}>\n      <OrigRoute {...props} />\n    </RouteDataProvider>\n  );\n};\n\nexport default Route;\n"],"names":["SuspensePendingContext","createContext","SuspensePendingProvider","React","Provider","value","suspensePending","children","useSuspensePending","useContext","BrowserRouter","suspenseConfig","props","useTransition","startTransiton","isPending","history","useRef","current","options","createBrowserHistoryOrig","savedListen","listen","listener","location","action","createBrowserHistory","Router","LazyFetcher","factory","preparedFetcher","prepare","invokeFetcher","fetcher","match","run","prefetch","source","createContainer","data","RouteDataProvider","useRouteData","useTrackedState","useRouteDataSelector","useSelector","INITIALIZED_MAP","Symbol","Route","fetchData","useHistory","useState","seen","matchPath","pathname","initializedMap","hackedHistory","Map","getInitializedMap","key","JSON","stringify","val","includes","push","has","set","get","routeData","setRouteData","useEffect","OrigRoute"],"mappings":"s5BAEA,IAAMA,EAAyBC,GAAc,GAMhCC,EAA2C,mBAItDC,gBAACH,EAAuBI,UAASC,QAHjCC,mBACAC,WAOWC,EAAqB,kBAAMC,EAAWT,ICgCtCU,EAAiC,gBAC5CC,IAAAA,eACAJ,IAAAA,SACGK,uCAEiCC,EAAcF,GAA3CG,OAAgBC,OACjBC,EAAUC,IAOhB,OANKD,EAAQE,UACXF,EAAQE,QAhCiB,SAACC,GAC5B,IAAMH,EAAUI,EAAyBD,GACjCL,GAAmBK,GAAW,IAA9BL,eACR,GAAIA,EAAgB,CAClB,IAAMO,EAAcL,EAAQM,OAC5BN,EAAQM,OAAS,SAACC,GAShB,OARiBF,EAAY,SAC3BG,EACAC,GAEAX,EAAe,WACbS,EAASC,EAAUC,QAM3B,OAAOT,EAeaU,MACbd,GACHE,eAAAA,MAIFX,gBAACD,GAAwBI,gBAAiBS,GACxCZ,gBAACwB,GAAOX,QAASA,EAAQE,SACtBX,KC9DIqB,EAAc,SACzBC,GAEA,IAAMC,EAAkBC,EAAQF,GAC1BG,kBACHC,OAASC,kCACPD,EAAQC,wCACb,gBAAQA,GAEN,OADAC,EAAIL,EAAiB,MACdM,EACLJ,EACA,CAACF,EAAiBI,GAClB,SAACG,SAAW,CACVA,EAAO,WACPA,EAAO,UCHXC,EAZiB,kBAA+C,kBAAjB,CAAEC,KAAM,OAAnCA,MAKtB,QAIUC,IAAVpC,SACiBqC,IAAjBC,gBACaC,IAAbC,YCEIC,EAAkBC,OAAO,mBAiClBC,EAAyB,gBAAGC,IAAAA,UAAcpC,qBAC/CI,EAAUiC,MACkBC,EAAiB,WACjD,IAjBIC,EAiBEjB,EAAQkB,EAAUpC,EAAQQ,SAAS6B,SAAUzC,GAC7C0C,EAlCgB,SAACtC,GACzB,IAAMuC,EAAgBvC,EAIlBsC,EAAiBC,EAAcV,GAKnC,OAJKS,IACHA,EAAiB,IAAIE,IACrBD,EAAcV,GAAmBS,GAE5BA,EAwBkBG,CAAkBzC,GACnC0C,EAAMC,KAAKC,UAAUhD,GAnBvBuC,EAAc,YAEZO,EAAUG,GAChB,MAAY,aAARH,OACAP,EAAKW,SAASD,SAClBV,EAAKY,KAAKF,GACHA,MAsBP,OAPKP,EAAeU,IAAIN,IACtBJ,EAAeW,IACbP,EACAxB,GAASc,EAAYA,EAAUd,GAAS,MAIrCoB,EAAeY,IAAIR,KAZrBS,OAAWC,OAwBlB,OAVAC,EAAU,WAQR,OAPiBrD,EAAQM,OAAO,SAACE,GAC/B,IAAMU,EAAQkB,EAAU5B,EAAS6B,SAAUzC,GACvCsB,GAASc,GACXoB,EAAapB,EAAUd,OAK1B,CAACtB,EAAOoC,EAAWhC,IAEpBb,gBAACqC,GAAkBD,KAAM4B,GACvBhE,gBAACmE,mBAAc1D"}