{"version":3,"file":"index.esm.js","sources":["../src/types.ts","../src/RouteDataContext.tsx","../src/Routes.tsx","../src/FetchData.ts"],"sourcesContent":["import { ReactElement, ReactNode } from 'react';\n\ntype RouteWithElement = {\n  path: string;\n  element: ReactElement;\n  children: ReactNode;\n};\n\ntype RouteWithRedirectTo = {\n  path: string;\n  redirectTo: string;\n};\n\nexport type Route = RouteWithElement | RouteWithRedirectTo;\n\nexport const hasRouteElement = (route: Route): route is RouteWithElement => (\n  !!(route as RouteWithElement).element\n);\n\nexport type match<Params extends { [K in keyof Params]?: string } = {}> = {\n  params: Params;\n  pathname: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type Location = any;\n","/* eslint camelcase: off */\n/* eslint @typescript-eslint/camelcase: off */\n\nimport React, { useEffect } from 'react';\nimport { createContainer } from 'react-tracked';\n\nconst passDataProp = ({ data }: { data: object }) => [\n  data,\n  () => null, // dummy update function, only used to notify updates\n] as const;\n\nconst {\n  Provider,\n  useUpdate,\n  useTrackedState,\n  useSelector,\n} = createContainer(passDataProp);\n\nconst SetNotify: React.FC<{\n  setNotify: (notify: () => void) => void;\n}> = ({ setNotify }) => {\n  const notify = useUpdate();\n  useEffect(() => {\n    setNotify(notify);\n  });\n  return null;\n};\n\nexport const RouteDataProvider: React.FC<{\n  data: object;\n  setNotify: (notify: () => void) => void;\n}> = ({ data, setNotify, children }) => (\n  <Provider data={data}>\n    <SetNotify setNotify={setNotify} />\n    {children}\n  </Provider>\n);\n\ntype UseTrackedState = <State>(opts: {\n  unstable_ignoreStateEquality?: boolean;\n}) => State;\n\nexport const useRouteData = () => (useTrackedState as UseTrackedState)({\n  // Because Suspendable by react-suspense-fetch is a mutable object,\n  // we need this special mode to handle it.\n  unstable_ignoreStateEquality: true,\n});\n\nexport const useRouteDataSelector = useSelector;\n","/* eslint react/no-children-prop: off */\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport {\n  useParams,\n  useResolvedLocation,\n  createRoutesFromChildren,\n  useRoutes as useRoutesOrig,\n  useListen, // by fork\n  useLocation,\n  matchRoutes,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n} from 'react-router';\n\nimport {\n  Route,\n  hasRouteElement,\n  match as Match,\n  Location,\n} from './types';\nimport { RouteDataProvider } from './RouteDataContext';\n\n// HACK because RouteContext is not exported.\nconst EMPTY_PATHNAME = { pathname: null };\nconst usePathname = () => useResolvedLocation(EMPTY_PATHNAME).pathname;\n\nconst useBasename = (basenameOrig: string) => {\n  const parentPathname = usePathname();\n  const basename = basenameOrig\n    ? `${parentPathname}/${basenameOrig}`.replace(/\\/\\/+/g, '/')\n    : parentPathname;\n  return basename;\n};\n\ntype RouteDataMap = { [path: string]: object };\ntype RouteNotifyMap = Map<string, () => void>;\n\nconst attachRouteData = (\n  routesOrig: Route[],\n  routeDataMap: RouteDataMap,\n  routeNotifyMap?: RouteNotifyMap,\n) => routesOrig.map((route) => {\n  if (!hasRouteElement(route)) return route;\n  const { fetchData } = route.element.props;\n  if (!fetchData) return route;\n  const routeData = routeDataMap[route.path];\n  const setNotify = (notify: () => void) => {\n    if (routeNotifyMap) {\n      routeNotifyMap.set(route.path, notify);\n    }\n  };\n  return {\n    ...route,\n    element: routeData && (\n      <RouteDataProvider data={routeData} setNotify={setNotify} children={route.element} />\n    ),\n  };\n});\n\nconst createRouteDataMap = (\n  matches: (Match & { route?: Route })[],\n  parentParams: { [key: string]: string },\n) => {\n  const map: RouteDataMap = {};\n  (matches || []).forEach((match: Match & { route?: Route }) => {\n    const { params, pathname, route } = match;\n    if (!route || !hasRouteElement(route)) return;\n    const { fetchData } = route.element.props;\n    if (!fetchData) return;\n    const m: Match = {\n      params: { ...parentParams, ...params },\n      pathname,\n    };\n    const routeData = fetchData(m);\n    map[route.path] = routeData;\n  });\n  return map;\n};\n\nconst getCachedRouteDataMap = (basename: string) => {\n  try {\n    const cache = (window as unknown as {\n      __ROUTE_DATA_MAP_CACHE__: { [basename: string]: RouteDataMap };\n    }).__ROUTE_DATA_MAP_CACHE__;\n    if (!cache[basename]) {\n      cache[basename] = {};\n    }\n    return cache[basename];\n  } catch (e) {\n    return {} as RouteDataMap;\n  }\n};\n\nconst consumeCachedRouteDataMap = (basename: string) => {\n  try {\n    const cache = (window as unknown as {\n      __ROUTE_DATA_MAP_CACHE__: { [basename: string]: RouteDataMap };\n    }).__ROUTE_DATA_MAP_CACHE__;\n    if (cache[basename]) {\n      delete cache[basename];\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\n// for ssr\nconst isSsr = (\n  typeof window === 'undefined'\n  || typeof window.navigator === 'undefined'\n  || `${window.navigator.userAgent}`.includes('ServerSideRendering')\n);\n\nconst useRoutesSsr = (\n  routesOrig: Route[],\n  basenameOrig = '',\n  caseSensitive = false,\n) => {\n  const basename = useBasename(basenameOrig);\n  const parentParams = useParams();\n\n  const location = useLocation();\n  const matches = matchRoutes(routesOrig, location, basename, caseSensitive);\n  const routeDataMap = getCachedRouteDataMap(basename);\n  if (Object.keys(routeDataMap).length === 0) {\n    Object.assign(routeDataMap, createRouteDataMap(matches, parentParams));\n  }\n\n  const routes = attachRouteData(routesOrig, routeDataMap);\n  return useRoutesOrig(routes, basenameOrig, caseSensitive);\n};\n\nexport const useRoutes = isSsr ? useRoutesSsr : (\n  routesOrig: Route[],\n  basenameOrig = '',\n  caseSensitive = false,\n) => {\n  const listen = useListen();\n  const basename = useBasename(basenameOrig);\n  const parentParams = useParams();\n\n  const [routeDataMap, setRouteDataMap] = useState<RouteDataMap>(\n    () => getCachedRouteDataMap(basename),\n  );\n  const routeNotifyMap = useRef<RouteNotifyMap>(new Map());\n\n  const ref = useRef<{\n    routesOrig: Route[];\n    basename: string;\n    caseSensitive: boolean;\n    parentParams: { [key: string]: string };\n  }>();\n  // Should we useLayoutEffect here?\n  useEffect(() => {\n    ref.current = {\n      routesOrig,\n      basename,\n      caseSensitive,\n      parentParams,\n    };\n  });\n\n  useEffect(() => {\n    let map: RouteDataMap = {};\n    const unlisten = listen((location: Location) => {\n      if (consumeCachedRouteDataMap(ref.current?.basename || '')) {\n        // we assume hydration this time\n        return;\n      }\n      const matches = matchRoutes(\n        ref.current?.routesOrig,\n        location,\n        ref.current?.basename,\n        ref.current?.caseSensitive,\n      );\n      map = createRouteDataMap(matches || [], ref.current?.parentParams || {});\n      setRouteDataMap((prev) => {\n        if (Object.keys(prev).length === 0 && Object.keys(map).length === 0) {\n          // bail out\n          return prev;\n        }\n        return map;\n      });\n      Object.keys(map).forEach((path) => {\n        const notify = routeNotifyMap.current.get(path);\n        if (notify) notify();\n      });\n    });\n    return unlisten;\n  }, [listen]);\n\n  const routes = attachRouteData(routesOrig, routeDataMap, routeNotifyMap.current);\n  return useRoutesOrig(routes, basenameOrig, caseSensitive);\n};\n\ntype Props = {\n  basename?: string;\n  caseSensitive?: boolean;\n};\n\nexport const Routes: React.FC<Props> = ({\n  basename = '',\n  caseSensitive = false,\n  children,\n}) => {\n  const routes = createRoutesFromChildren(children);\n  return useRoutes(routes, basename, caseSensitive);\n};\n","import { prepare, run, prefetch } from 'react-suspense-fetch';\n\nimport { match as Match } from './types';\n\ntype FetchFunc<T extends object, P> = (m: Match<P>) => Promise<T>;\n\nexport const FetchData = <T extends object, P>(fetchFunc: FetchFunc<T, P>) => {\n  const fetchData = (match: Match<P>) => prefetch(fetchFunc, match);\n  return fetchData;\n};\n\nexport const FetchDataLazy = <T extends object, P>(\n  factory: () => Promise<{ default: FetchFunc<T, P> }>,\n) => {\n  const preparedFetcher = prepare(factory);\n  const invokeFetcher = async (\n    [fetchData, match]: readonly [FetchFunc<T, P>, Match<P>],\n  ) => fetchData(match);\n  const fetchDataLazy = (match: Match<P>) => {\n    run(preparedFetcher, null);\n    return prefetch(\n      invokeFetcher,\n      [preparedFetcher, match] as const,\n      (source) => [\n        source[0].default, // can suspend\n        source[1],\n      ] as const,\n    );\n  };\n  return fetchDataLazy;\n};\n"],"names":["hasRouteElement","route","element","createContainer","data","Provider","useUpdate","useTrackedState","SetNotify","setNotify","notify","useEffect","RouteDataProvider","children","React","useRouteData","unstable_ignoreStateEquality","useRouteDataSelector","useSelector","EMPTY_PATHNAME","pathname","useBasename","basenameOrig","parentPathname","useResolvedLocation","replace","attachRouteData","routesOrig","routeDataMap","routeNotifyMap","map","props","fetchData","routeData","path","set","createRouteDataMap","matches","parentParams","forEach","match","params","getCachedRouteDataMap","basename","cache","window","__ROUTE_DATA_MAP_CACHE__","e","useRoutes","navigator","userAgent","includes","caseSensitive","useParams","location","useLocation","matchRoutes","Object","keys","length","assign","routes","useRoutesOrig","listen","useListen","useState","setRouteDataMap","useRef","Map","ref","current","consumeCachedRouteDataMap","_ref$current2","_ref$current3","_ref$current4","prev","get","Routes","createRoutesFromChildren","FetchData","fetchFunc","prefetch","FetchDataLazy","factory","preparedFetcher","prepare","invokeFetcher","run","source"],"mappings":"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"}