{"version":3,"file":"index.js","sources":["../src/SuspensePendingContext.tsx","../src/BrowserRouter.tsx","../src/RouteDataContext.ts","../src/Route.tsx","../src/LazyFetcher.ts"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nconst SuspensePendingContext = createContext(false);\n\ntype Props = {\n  suspensePending: boolean;\n};\n\nexport const SuspensePendingProvider: React.FC<Props> = ({\n  suspensePending,\n  children,\n}) => (\n  <SuspensePendingContext.Provider value={suspensePending}>\n    {children}\n  </SuspensePendingContext.Provider>\n);\n\nexport const useSuspensePending = () => useContext(SuspensePendingContext);\n","// eslint-disable-next-line spaced-comment\n/// <reference types=\"react/experimental\" />\n\nimport React, {\n  SuspenseConfig,\n  TransitionStartFunction,\n  useRef,\n  useTransition,\n} from 'react';\nimport { Router } from 'react-router';\nimport { BrowserRouterProps } from 'react-router-dom';\nimport {\n  createBrowserHistory as createBrowserHistoryOrig,\n  BrowserHistoryBuildOptions,\n  History,\n  Location,\n  Action,\n} from 'history';\n\nimport { SuspensePendingProvider } from './SuspensePendingContext';\n\ntype Options = BrowserHistoryBuildOptions & {\n  startTransiton: TransitionStartFunction;\n};\n\nconst createBrowserHistory = (options?: Options) => {\n  const history = createBrowserHistoryOrig(options);\n  const { startTransiton } = options || {};\n  if (startTransiton) {\n    const savedListen = history.listen;\n    history.listen = (listener: History.LocationListener<History.PoorMansUnknown>) => {\n      const unlisten = savedListen((\n        location: Location<History.PoorMansUnknown>,\n        action: Action,\n      ) => {\n        startTransiton(() => {\n          listener(location, action);\n        });\n      });\n      return unlisten;\n    };\n  }\n  return history;\n};\n\ntype Props = BrowserRouterProps & {\n  suspenseConfig?: SuspenseConfig;\n};\n\nexport const BrowserRouter: React.FC<Props> = ({\n  suspenseConfig,\n  children,\n  ...props\n}) => {\n  const [startTransiton, isPending] = useTransition(suspenseConfig);\n  const history = useRef<History>();\n  if (!history.current) {\n    history.current = createBrowserHistory({\n      ...props,\n      startTransiton,\n    });\n  }\n  return (\n    <SuspensePendingProvider suspensePending={isPending}>\n      <Router history={history.current}>\n        {children}\n      </Router>\n    </SuspensePendingProvider>\n  );\n};\n\nexport default BrowserRouter;\n","import { createContainer } from 'react-tracked';\n\nconst passDataProp = ({ data }: { data: object | null } = { data: null }) => [\n  // Because Suspendable by react-suspense-fetch is a mutable object,\n  // we need to expand it here. Othrewise, state usage tracking\n  // by react-tracked doesn't work.\n  data && { ...data },\n  null, // we don't use useUpdate\n] as const;\n\nexport const {\n  Provider: RouteDataProvider,\n  useTrackedState: useRouteData,\n  useSelector: useRouteDataSelector,\n} = createContainer(passDataProp);\n","import React, { useEffect, useState } from 'react';\nimport {\n  RouteProps,\n  match as Match,\n  Route as OrigRoute,\n  matchPath,\n  useHistory,\n} from 'react-router';\nimport {\n  Location,\n  History,\n} from 'history';\n\nimport { RouteDataProvider } from './RouteDataContext';\n\nconst INITIALIZED_MAP = Symbol('INITIALIZED_MAP');\n\n// HACK\nconst getInitializedMap = (history: History) => {\n  const hackedHistory = history as {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [INITIALIZED_MAP]?: Map<any, any>;\n  };\n  let initializedMap = hackedHistory[INITIALIZED_MAP];\n  if (!initializedMap) {\n    initializedMap = new Map();\n    hackedHistory[INITIALIZED_MAP] = initializedMap;\n  }\n  return initializedMap;\n};\n\n// HACK\nconst removeCircular = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const seen: any[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (key: any, val: any) => {\n    if (key === 'children') return null;\n    if (seen.includes(val)) return null;\n    seen.push(val);\n    return val;\n  };\n};\n\ntype FetchData = (m: Match) => object;\n\n// we somehow need global cache\n// HACK it there any better way???\nconst getInitialRouteData = (\n  history: History,\n  fetchData: FetchData,\n  props: RouteProps & { computedMatch?: Match },\n) => {\n  const match = props.computedMatch || matchPath(history.location.pathname, props);\n  const initializedMap = getInitializedMap(history);\n  const key = JSON.stringify(props, removeCircular()); // HACK\n  if (!initializedMap.has(key)) {\n    initializedMap.set(\n      key,\n      match ? fetchData(match) : null,\n    );\n    // FIXME no cleanup\n  }\n  return initializedMap.get(key) as object | null;\n};\n\ntype Props = RouteProps & {\n  fetchData?: FetchData;\n};\n\nexport const Route: React.FC<Props> = ({ fetchData, ...props }) => {\n  const history = useHistory();\n  const [routeDataState, setRouteData] = useState<object | null>(null);\n  const routeData = (fetchData && routeDataState === null\n    ? getInitialRouteData(history, fetchData, props)\n    : routeDataState);\n  useEffect(() => {\n    const unlisten = history.listen((location: Location) => {\n      const match = matchPath(location.pathname, props);\n      if (match && fetchData) {\n        setRouteData(fetchData(match));\n      }\n    });\n    // FIXME route could be change before this effect is handled?\n    return unlisten;\n  }, [props, fetchData, history]);\n  return (\n    <RouteDataProvider data={routeData}>\n      <OrigRoute {...props} />\n    </RouteDataProvider>\n  );\n};\n\nexport default Route;\n","import { match as Match } from 'react-router';\nimport { prepare, run, prefetch } from 'react-suspense-fetch';\n\nexport const LazyFetcher = <T extends object, P>(\n  factory: () => Promise<{ default: (m: Match<P>) => Promise<T> }>,\n) => {\n  const preparedFetcher = prepare(factory);\n  const invokeFetcher = async (\n    [fetcher, match]: readonly [(m: Match<P>) => Promise<T>, Match<P>],\n  ) => fetcher(match);\n  return (match: Match<P>) => {\n    run(preparedFetcher, null);\n    return prefetch(\n      invokeFetcher,\n      [preparedFetcher, match] as const,\n      (source) => [\n        source[0].default, // can suspend\n        source[1],\n      ] as const,\n    );\n  };\n};\n\nexport default LazyFetcher;\n"],"names":["SuspensePendingContext","createContext","SuspensePendingProvider","React","Provider","value","suspensePending","children","createBrowserHistory","options","history","createBrowserHistoryOrig","startTransiton","savedListen","listen","listener","location","action","createContainer","data","RouteDataProvider","useRouteData","useTrackedState","useRouteDataSelector","useSelector","INITIALIZED_MAP","Symbol","suspenseConfig","props","useTransition","isPending","useRef","current","Router","factory","preparedFetcher","prepare","invokeFetcher","fetcher","match","run","prefetch","source","fetchData","useHistory","useState","routeDataState","setRouteData","routeData","seen","computedMatch","matchPath","pathname","initializedMap","hackedHistory","Map","getInitializedMap","key","JSON","stringify","val","includes","push","has","set","get","getInitialRouteData","useEffect","OrigRoute","useContext"],"mappings":"6iBAEA,IAAMA,EAAyBC,iBAAc,GAMhCC,EAA2C,mBAItDC,gBAACH,EAAuBI,UAASC,QAHjCC,mBACAC,WCeIC,EAAuB,SAACC,GAC5B,IAAMC,EAAUC,uBAAyBF,GACjCG,GAAmBH,GAAW,IAA9BG,eACR,GAAIA,EAAgB,CAClB,IAAMC,EAAcH,EAAQI,OAC5BJ,EAAQI,OAAS,SAACC,GAShB,OARiBF,EAAY,SAC3BG,EACAC,GAEAL,EAAe,WACbG,EAASC,EAAUC,QAM3B,OAAOP,KC5BLQ,kBAZiB,gBAAGC,cAAkC,CAAEA,KAAM,SAA1CA,WAAqD,CAI3EA,QAAaA,GACb,QAIUC,IAAVhB,SACiBiB,IAAjBC,gBACaC,IAAbC,YCEIC,EAAkBC,OAAO,2gDFkCe,gBAC5CC,IAAAA,eACApB,IAAAA,SACGqB,uCAEiCC,gBAAcF,GAA3Cf,OAAgBkB,OACjBpB,EAAUqB,WAOhB,OANKrB,EAAQsB,UACXtB,EAAQsB,QAAUxB,OACboB,GACHhB,eAAAA,MAIFT,gBAACD,GAAwBI,gBAAiBwB,GACxC3B,gBAAC8B,UAAOvB,QAASA,EAAQsB,SACtBzB,yBG9DkB,SACzB2B,GAEA,IAAMC,EAAkBC,UAAQF,GAC1BG,kBACHC,OAASC,kCACPD,EAAQC,wCACb,gBAAQA,GAEN,OADAC,MAAIL,EAAiB,MACdM,WACLJ,EACA,CAACF,EAAiBI,GAClB,SAACG,SAAW,CACVA,EAAO,WACPA,EAAO,sBDqDuB,gBAAGC,IAAAA,UAAcf,qBAC/ClB,EAAUkC,iBACuBC,WAAwB,MAAxDC,OAAgBC,OACjBC,EAAaL,GAAgC,OAAnBG,EAzBN,SAC1BpC,EACAiC,EACAf,GAEA,IAnBMqB,EAmBAV,EAAQX,EAAMsB,eAAiBC,YAAUzC,EAAQM,SAASoC,SAAUxB,GACpEyB,EApCkB,SAAC3C,GACzB,IAAM4C,EAAgB5C,EAIlB2C,EAAiBC,EAAc7B,GAKnC,OAJK4B,IACHA,EAAiB,IAAIE,IACrBD,EAAc7B,GAAmB4B,GAE5BA,EA0BgBG,CAAkB9C,GACnC+C,EAAMC,KAAKC,UAAU/B,GArBrBqB,EAAc,YAEZQ,EAAUG,GAChB,MAAY,aAARH,OACAR,EAAKY,SAASD,SAClBX,EAAKa,KAAKF,GACHA,MAuBT,OAPKP,EAAeU,IAAIN,IACtBJ,EAAeW,IACbP,EACAlB,EAAQI,EAAUJ,GAAS,MAIxBc,EAAeY,IAAIR,GAWtBS,CAAoBxD,EAASiC,EAAWf,GACxCkB,EAWJ,OAVAqB,YAAU,WAQR,OAPiBzD,EAAQI,OAAO,SAACE,GAC/B,IAAMuB,EAAQY,YAAUnC,EAASoC,SAAUxB,GACvCW,GAASI,GACXI,EAAaJ,EAAUJ,OAK1B,CAACX,EAAOe,EAAWjC,IAEpBP,gBAACiB,GAAkBD,KAAM6B,GACvB7C,gBAACiE,yBAAcxC,uFHvEa,kBAAMyC,aAAWrE"}