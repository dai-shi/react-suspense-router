{"version":3,"file":"index.js","sources":["../src/HistoryContext.tsx","../src/SuspensePendingContext.tsx","../src/RouteDataContext.ts","../src/RouteWrapper.tsx","../src/Routes.tsx","../src/types.ts","../src/BrowserRouter.tsx","../src/LazyFetcher.ts"],"sourcesContent":["import React, { createContext, useContext } from 'react';\n\nimport { History } from './types';\n\nconst HistoryContext = createContext<History | null>(null);\n\ntype Props = {\n  history: History;\n};\n\nexport const HistoryProvider: React.FC<Props> = ({\n  history,\n  children,\n}) => (\n  <HistoryContext.Provider value={history}>\n    {children}\n  </HistoryContext.Provider>\n);\n\nexport const useHistory = () => {\n  const history = useContext(HistoryContext);\n  if (!history) throw new Error('missing <HistoryContext>');\n  return history;\n};\n","import React, { createContext, useContext } from 'react';\n\nconst SuspensePendingContext = createContext(false);\n\ntype Props = {\n  suspensePending: boolean;\n};\n\nexport const SuspensePendingProvider: React.FC<Props> = ({\n  suspensePending,\n  children,\n}) => (\n  <SuspensePendingContext.Provider value={suspensePending}>\n    {children}\n  </SuspensePendingContext.Provider>\n);\n\nexport const useSuspensePending = () => useContext(SuspensePendingContext);\n","/* eslint camelcase: off */\n/* eslint @typescript-eslint/camelcase: off */\n\nimport { createContainer } from 'react-tracked';\n\nconst passDataProp = ({ data }: { data: object }) => [\n  data,\n  null, // we don't use useUpdate\n] as const;\n\nconst {\n  Provider,\n  useTrackedState,\n  useSelector,\n} = createContainer(passDataProp);\n\nexport const RouteDataProvider = Provider;\n\ntype UseTrackedState = <State>(opts: {\n  unstable_ignoreStateEquality?: boolean;\n}) => State;\n\nexport const useRouteData = () => (useTrackedState as UseTrackedState)({\n  // Because Suspendable by react-suspense-fetch is a mutable object,\n  // we need this special mode to handle it.\n  unstable_ignoreStateEquality: true,\n});\n\nexport const useRouteDataSelector = useSelector;\n","import React, { useRef, useState, useEffect } from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { matchRoutes } from 'react-router';\n\nimport { RouteDataProvider } from './RouteDataContext';\nimport { match as Match, History, HistoryEvent } from './types';\n\nconst INITIALIZED_MAP = Symbol('INITIALIZED_MAP');\n\n// HACK we mutate history for global cache\nconst getInitializedMap = <Key extends unknown, Value>(history: History) => {\n  const hackedHistory = history as {\n    [INITIALIZED_MAP]?: Map<Key, Value>;\n  };\n  let initializedMap = hackedHistory[INITIALIZED_MAP];\n  if (!initializedMap) {\n    initializedMap = new Map();\n    hackedHistory[INITIALIZED_MAP] = initializedMap;\n  }\n  return initializedMap;\n};\n\ntype FetchData = (m: Match) => object;\n\nconst getInitialRouteData = (\n  history: History,\n  fetchData: FetchData,\n  path: string,\n  basename: string,\n  caseSensitive: boolean,\n  match: Match,\n) => {\n  type Item = {\n    data: object;\n    commit: () => void;\n    cleanup: () => void;\n  };\n  const initializedMap = getInitializedMap<string, Item>(history);\n  const key = JSON.stringify({\n    path,\n    basename,\n    caseSensitive,\n    match,\n  }); // HACK we need a consistent key in concurrent mode\n  if (!initializedMap.has(key)) {\n    const data = fetchData(match);\n    const timer = setTimeout(() => {\n      initializedMap.delete(key);\n    }, 30 * 1000); // HACK 30 sec cleanup timeout\n    const commit = () => {\n      clearTimeout(timer);\n    };\n    const cleanup = () => {\n      initializedMap.delete(key);\n      clearTimeout(timer);\n    };\n    initializedMap.set(key, { data, commit, cleanup });\n  }\n  return initializedMap.get(key) as Item;\n};\n\ntype Props = {\n  history: History;\n  routePath: string;\n  basename: string;\n  caseSensitive: boolean;\n  fetchData: FetchData;\n  match: Match;\n};\n\nexport const RouteWrapper: React.FC<Props> = ({\n  history,\n  routePath,\n  basename,\n  caseSensitive,\n  fetchData,\n  match,\n  children,\n}) => {\n  const commit = useRef<() => void>();\n  const cleanup = useRef<() => void>();\n  const [routeData, setRouteData] = useState<object>(() => {\n    const item = getInitialRouteData(\n      history,\n      fetchData,\n      routePath,\n      basename,\n      caseSensitive,\n      match,\n    );\n    commit.current = item.commit;\n    cleanup.current = item.cleanup;\n    return item.data;\n  });\n  useEffect(() => {\n    const unlisten = history.listen(({ location }: HistoryEvent) => {\n      if (commit.current) commit.current();\n      const matches = matchRoutes([{ path: routePath }], location, basename, caseSensitive);\n      if (matches && matches.length) {\n        // TODO we do not have parentParams here\n        const m: Match = {\n          params: matches[0].params,\n          pathname: matches[0].pathname,\n        };\n        setRouteData(fetchData(m));\n        if (cleanup.current) cleanup.current();\n      }\n    });\n    // FIXME route could be change before this effect is handled?\n    return () => {\n      if (cleanup.current) cleanup.current();\n      unlisten();\n    };\n  }, [history, routePath, basename, caseSensitive, fetchData]);\n  return (\n    <RouteDataProvider data={routeData}>\n      {children}\n    </RouteDataProvider>\n  );\n};\n\nexport default RouteWrapper;\n","import React, { createElement, useMemo } from 'react';\nimport {\n  useParams,\n  useResolvedLocation,\n  createRoutesFromChildren,\n  useRoutes as useRoutesOrig,\n  useLocation,\n  matchRoutes,\n  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n  // @ts-ignore\n} from 'react-router';\n\nimport { Route, match as Match, hasRouteElement } from './types';\nimport { RouteWrapper } from './RouteWrapper';\nimport { useHistory } from './HistoryContext';\n\n// HACK because RouteContext is not exported.\nconst EMPTY_PATHNAME = { pathname: null };\nconst usePathname = () => useResolvedLocation(EMPTY_PATHNAME).pathname;\n\nexport const useRoutes = (\n  routesOrig: Route[],\n  basenameOrig = '',\n  caseSensitive = false,\n) => {\n  const history = useHistory();\n  const location = useLocation();\n  const parentPathname = usePathname();\n  const parentParams = useParams();\n\n  const basename = basenameOrig\n    ? `${parentPathname}/${basenameOrig}`.replace(/\\/\\/+/g, '/')\n    : parentPathname;\n\n  const matches = useMemo(\n    () => matchRoutes(routesOrig, location, basename, caseSensitive),\n    [routesOrig, location, basename, caseSensitive],\n  );\n\n  const routes = [...routesOrig];\n  (matches || []).forEach((match: Match & { route?: Route }) => {\n    if (!match.route) return;\n    const routeIndex = routes.indexOf(match.route);\n    if (routeIndex === -1) return;\n    const route = routes[routeIndex];\n    if (!hasRouteElement(route)) return;\n    const { fetchData } = route.element.props;\n    if (!fetchData) return;\n    const params = { ...parentParams, ...match.params };\n    const element = createElement(RouteWrapper, {\n      history,\n      routePath: route.path,\n      basename,\n      caseSensitive,\n      fetchData,\n      match: { params, pathname: match.pathname },\n    }, route.element);\n    routes[routeIndex] = { ...route, element };\n  });\n\n  return useRoutesOrig(routes, basenameOrig, caseSensitive);\n};\n\ntype Props = {\n  basename?: string;\n  caseSensitive?: boolean;\n};\n\nexport const Routes: React.FC<Props> = ({\n  basename = '',\n  caseSensitive = false,\n  children,\n}) => {\n  const routes = createRoutesFromChildren(children);\n  return useRoutes(routes, basename, caseSensitive);\n};\n","import { ReactElement, ReactNode } from 'react';\n\ntype RouteWithElement = {\n  path: string;\n  element: ReactElement;\n  children: ReactNode;\n};\n\ntype RouteWithRedirectTo = {\n  path: string;\n  redirectTo: string;\n};\n\nexport type Route = RouteWithElement | RouteWithRedirectTo;\n\nexport const hasRouteElement = (route: Route): route is RouteWithElement => (\n  !!(route as RouteWithElement).element\n);\n\nexport type match<Params extends { [K in keyof Params]?: string } = {}> = {\n  params: Params;\n  pathname: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type History = any;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type HistoryEvent = any;\n","// eslint-disable-next-line spaced-comment\n/// <reference types=\"react/experimental\" />\n\nimport React, {\n  TransitionStartFunction,\n  useRef,\n  useTransition,\n} from 'react';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { Router } from 'react-router';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { createBrowserHistory } from 'history';\n\nimport { History, HistoryEvent } from './types';\nimport { HistoryProvider } from './HistoryContext';\nimport { SuspensePendingProvider } from './SuspensePendingContext';\n\ntype Props = {\n  timeout?: number;\n  window?: unknown;\n};\n\nconst wrapHistory = (startTransiton: TransitionStartFunction) => (history: History) => {\n  const listen = (listener: (e: HistoryEvent) => void) => {\n    const unlisten = history.listen((e: HistoryEvent) => {\n      startTransiton(() => {\n        listener(e);\n      });\n    });\n    return unlisten;\n  };\n  return { ...history, listen };\n};\n\nexport const BrowserRouter: React.FC<Props> = ({\n  timeout,\n  window,\n  children,\n}) => {\n  const [startTransiton, isPending] = useTransition(timeout ? { timeoutMs: timeout } : null);\n  const history = useRef<History>();\n  if (!history.current) {\n    history.current = wrapHistory(startTransiton)(createBrowserHistory({ window }));\n  }\n  return (\n    <HistoryProvider history={history.current}>\n      <SuspensePendingProvider suspensePending={isPending}>\n        <Router history={history.current} timeout={timeout}>\n          {children}\n        </Router>\n      </SuspensePendingProvider>\n    </HistoryProvider>\n  );\n};\n\nexport default BrowserRouter;\n","import { prepare, run, prefetch } from 'react-suspense-fetch';\n\nimport { match as Match } from './types';\n\nexport const LazyFetcher = <T extends object, P>(\n  factory: () => Promise<{ default: (m: Match<P>) => Promise<T> }>,\n) => {\n  const preparedFetcher = prepare(factory);\n  const invokeFetcher = async (\n    [fetcher, match]: readonly [(m: Match<P>) => Promise<T>, Match<P>],\n  ) => fetcher(match);\n  return (match: Match<P>) => {\n    run(preparedFetcher, null);\n    return prefetch(\n      invokeFetcher,\n      [preparedFetcher, match] as const,\n      (source) => [\n        source[0].default, // can suspend\n        source[1],\n      ] as const,\n    );\n  };\n};\n\nexport default LazyFetcher;\n"],"names":["HistoryContext","createContext","HistoryProvider","React","Provider","value","history","children","SuspensePendingContext","SuspensePendingProvider","suspensePending","createContainer","data","useTrackedState","RouteDataProvider","useRouteDataSelector","useSelector","INITIALIZED_MAP","Symbol","RouteWrapper","routePath","basename","caseSensitive","fetchData","match","commit","useRef","cleanup","useState","item","path","initializedMap","hackedHistory","Map","getInitializedMap","key","JSON","stringify","has","timer","setTimeout","set","clearTimeout","get","getInitialRouteData","current","routeData","setRouteData","useEffect","unlisten","listen","location","matches","matchRoutes","length","params","pathname","EMPTY_PATHNAME","useRoutes","routesOrig","basenameOrig","useContext","Error","useHistory","useLocation","parentPathname","useResolvedLocation","parentParams","useParams","replace","useMemo","routes","forEach","route","routeIndex","indexOf","element","hasRouteElement","props","createElement","useRoutesOrig","timeout","window","useTransition","timeoutMs","startTransiton","isPending","listener","e","wrapHistory","createBrowserHistory","Router","factory","preparedFetcher","prepare","invokeFetcher","fetcher","run","prefetch","source","createRoutesFromChildren","unstable_ignoreStateEquality"],"mappings":"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"}